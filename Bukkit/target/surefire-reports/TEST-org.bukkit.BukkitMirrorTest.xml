<?xml version="1.0" encoding="UTF-8" ?>
<testsuite tests="555" failures="0" name="org.bukkit.BukkitMirrorTest" time="0.171" errors="0" skipped="0">
  <properties>
    <property name="java.runtime.name" value="Java(TM) SE Runtime Environment"/>
    <property name="sun.boot.library.path" value="/usr/lib/jvm/jdk-8-oracle-arm32-vfp-hflt/jre/lib/arm"/>
    <property name="java.vm.version" value="25.65-b01"/>
    <property name="java.vm.vendor" value="Oracle Corporation"/>
    <property name="maven.multiModuleProjectDirectory" value="/home/pi/minecraft/Bukkit"/>
    <property name="java.vendor.url" value="http://java.oracle.com/"/>
    <property name="path.separator" value=":"/>
    <property name="guice.disable.misplaced.annotation.check" value="true"/>
    <property name="java.vm.name" value="Java HotSpot(TM) Client VM"/>
    <property name="file.encoding.pkg" value="sun.io"/>
    <property name="user.country" value="GB"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="sun.os.patch.level" value="unknown"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="user.dir" value="/home/pi/minecraft/Bukkit"/>
    <property name="java.runtime.version" value="1.8.0_65-b17"/>
    <property name="java.awt.graphicsenv" value="sun.awt.X11GraphicsEnvironment"/>
    <property name="java.endorsed.dirs" value="/usr/lib/jvm/jdk-8-oracle-arm32-vfp-hflt/jre/lib/endorsed"/>
    <property name="os.arch" value="arm"/>
    <property name="java.io.tmpdir" value="/tmp"/>
    <property name="line.separator" value="
"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="os.name" value="Linux"/>
    <property name="classworlds.conf" value="/home/pi/minecraft/apache-maven-3.5.0/bin/m2.conf"/>
    <property name="sun.jnu.encoding" value="ISO-8859-1"/>
    <property name="java.library.path" value="/usr/java/packages/lib/arm:/lib:/usr/lib"/>
    <property name="maven.conf" value="/home/pi/minecraft/apache-maven-3.5.0/conf"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="java.class.version" value="52.0"/>
    <property name="sun.management.compiler" value="HotSpot Client Compiler"/>
    <property name="os.version" value="4.14.79-v7+"/>
    <property name="library.jansi.path" value="/home/pi/minecraft/apache-maven-3.5.0/lib/jansi-native/linux32"/>
    <property name="user.home" value="/home/pi"/>
    <property name="sun.arch.abi" value="gnueabihf"/>
    <property name="user.timezone" value="Europe/Riga"/>
    <property name="java.awt.printerjob" value="sun.print.PSPrinterJob"/>
    <property name="java.specification.version" value="1.8"/>
    <property name="file.encoding" value="ISO-8859-1"/>
    <property name="user.name" value="pi"/>
    <property name="java.class.path" value="/home/pi/minecraft/apache-maven-3.5.0/boot/plexus-classworlds-2.5.2.jar"/>
    <property name="jdk.net.URLClassPath.disableClassPathURLCheck" value="true"/>
    <property name="java.vm.specification.version" value="1.8"/>
    <property name="sun.arch.data.model" value="32"/>
    <property name="java.home" value="/usr/lib/jvm/jdk-8-oracle-arm32-vfp-hflt/jre"/>
    <property name="sun.java.command" value="org.codehaus.plexus.classworlds.launcher.Launcher clean install"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="user.language" value="en"/>
    <property name="awt.toolkit" value="sun.awt.X11.XToolkit"/>
    <property name="java.vm.info" value="mixed mode"/>
    <property name="java.version" value="1.8.0_65"/>
    <property name="java.ext.dirs" value="/usr/lib/jvm/jdk-8-oracle-arm32-vfp-hflt/jre/lib/ext:/usr/java/packages/lib/ext"/>
    <property name="securerandom.source" value="file:/dev/./urandom"/>
    <property name="sun.boot.class.path" value="/usr/lib/jvm/jdk-8-oracle-arm32-vfp-hflt/jre/lib/resources.jar:/usr/lib/jvm/jdk-8-oracle-arm32-vfp-hflt/jre/lib/rt.jar:/usr/lib/jvm/jdk-8-oracle-arm32-vfp-hflt/jre/lib/sunrsasign.jar:/usr/lib/jvm/jdk-8-oracle-arm32-vfp-hflt/jre/lib/jsse.jar:/usr/lib/jvm/jdk-8-oracle-arm32-vfp-hflt/jre/lib/jce.jar:/usr/lib/jvm/jdk-8-oracle-arm32-vfp-hflt/jre/lib/charsets.jar:/usr/lib/jvm/jdk-8-oracle-arm32-vfp-hflt/jre/lib/jfr.jar:/usr/lib/jvm/jdk-8-oracle-arm32-vfp-hflt/jre/classes"/>
    <property name="java.vendor" value="Oracle Corporation"/>
    <property name="maven.home" value="/home/pi/minecraft/apache-maven-3.5.0"/>
    <property name="file.separator" value="/"/>
    <property name="java.vendor.url.bug" value="http://bugreport.sun.com/bugreport/"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="sun.cpu.isalist" value=""/>
  </properties>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isStatic[0: java.lang.String org.bukkit.Server.getVersion{}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isDeprecated[0: java.lang.String org.bukkit.Server.getVersion{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="parameterTypes[0: java.lang.String org.bukkit.Server.getVersion{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="returnType[0: java.lang.String org.bukkit.Server.getVersion{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="declaredException[0: java.lang.String org.bukkit.Server.getVersion{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isStatic[1: org.bukkit.OfflinePlayer org.bukkit.Server.getOfflinePlayer{java.lang.String}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isDeprecated[1: org.bukkit.OfflinePlayer org.bukkit.Server.getOfflinePlayer{java.lang.String}]" time="0.003"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="parameterTypes[1: org.bukkit.OfflinePlayer org.bukkit.Server.getOfflinePlayer{java.lang.String}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="returnType[1: org.bukkit.OfflinePlayer org.bukkit.Server.getOfflinePlayer{java.lang.String}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="declaredException[1: org.bukkit.OfflinePlayer org.bukkit.Server.getOfflinePlayer{java.lang.String}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isStatic[2: org.bukkit.OfflinePlayer org.bukkit.Server.getOfflinePlayer{java.util.UUID}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isDeprecated[2: org.bukkit.OfflinePlayer org.bukkit.Server.getOfflinePlayer{java.util.UUID}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="parameterTypes[2: org.bukkit.OfflinePlayer org.bukkit.Server.getOfflinePlayer{java.util.UUID}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="returnType[2: org.bukkit.OfflinePlayer org.bukkit.Server.getOfflinePlayer{java.util.UUID}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="declaredException[2: org.bukkit.OfflinePlayer org.bukkit.Server.getOfflinePlayer{java.util.UUID}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isStatic[3: org.bukkit.plugin.PluginManager org.bukkit.Server.getPluginManager{}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isDeprecated[3: org.bukkit.plugin.PluginManager org.bukkit.Server.getPluginManager{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="parameterTypes[3: org.bukkit.plugin.PluginManager org.bukkit.Server.getPluginManager{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="returnType[3: org.bukkit.plugin.PluginManager org.bukkit.Server.getPluginManager{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="declaredException[3: org.bukkit.plugin.PluginManager org.bukkit.Server.getPluginManager{}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isStatic[4: org.bukkit.entity.Player org.bukkit.Server.getPlayer{java.lang.String}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isDeprecated[4: org.bukkit.entity.Player org.bukkit.Server.getPlayer{java.lang.String}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="parameterTypes[4: org.bukkit.entity.Player org.bukkit.Server.getPlayer{java.lang.String}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="returnType[4: org.bukkit.entity.Player org.bukkit.Server.getPlayer{java.lang.String}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="declaredException[4: org.bukkit.entity.Player org.bukkit.Server.getPlayer{java.lang.String}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isStatic[5: org.bukkit.entity.Player org.bukkit.Server.getPlayer{java.util.UUID}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isDeprecated[5: org.bukkit.entity.Player org.bukkit.Server.getPlayer{java.util.UUID}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="parameterTypes[5: org.bukkit.entity.Player org.bukkit.Server.getPlayer{java.util.UUID}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="returnType[5: org.bukkit.entity.Player org.bukkit.Server.getPlayer{java.util.UUID}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="declaredException[5: org.bukkit.entity.Player org.bukkit.Server.getPlayer{java.util.UUID}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isStatic[6: org.bukkit.plugin.messaging.Messenger org.bukkit.Server.getMessenger{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isDeprecated[6: org.bukkit.plugin.messaging.Messenger org.bukkit.Server.getMessenger{}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="parameterTypes[6: org.bukkit.plugin.messaging.Messenger org.bukkit.Server.getMessenger{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="returnType[6: org.bukkit.plugin.messaging.Messenger org.bukkit.Server.getMessenger{}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="declaredException[6: org.bukkit.plugin.messaging.Messenger org.bukkit.Server.getMessenger{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isStatic[7: org.bukkit.World org.bukkit.Server.getWorld{java.lang.String}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isDeprecated[7: org.bukkit.World org.bukkit.Server.getWorld{java.lang.String}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="parameterTypes[7: org.bukkit.World org.bukkit.Server.getWorld{java.lang.String}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="returnType[7: org.bukkit.World org.bukkit.Server.getWorld{java.lang.String}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="declaredException[7: org.bukkit.World org.bukkit.Server.getWorld{java.lang.String}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isStatic[8: org.bukkit.World org.bukkit.Server.getWorld{java.util.UUID}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isDeprecated[8: org.bukkit.World org.bukkit.Server.getWorld{java.util.UUID}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="parameterTypes[8: org.bukkit.World org.bukkit.Server.getWorld{java.util.UUID}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="returnType[8: org.bukkit.World org.bukkit.Server.getWorld{java.util.UUID}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="declaredException[8: org.bukkit.World org.bukkit.Server.getWorld{java.util.UUID}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isStatic[9: boolean org.bukkit.Server.getAllowFlight{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isDeprecated[9: boolean org.bukkit.Server.getAllowFlight{}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="parameterTypes[9: boolean org.bukkit.Server.getAllowFlight{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="returnType[9: boolean org.bukkit.Server.getAllowFlight{}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="declaredException[9: boolean org.bukkit.Server.getAllowFlight{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isStatic[10: java.lang.String org.bukkit.Server.getIp{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isDeprecated[10: java.lang.String org.bukkit.Server.getIp{}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="parameterTypes[10: java.lang.String org.bukkit.Server.getIp{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="returnType[10: java.lang.String org.bukkit.Server.getIp{}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="declaredException[10: java.lang.String org.bukkit.Server.getIp{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isStatic[11: java.lang.String org.bukkit.Server.getBukkitVersion{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isDeprecated[11: java.lang.String org.bukkit.Server.getBukkitVersion{}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="parameterTypes[11: java.lang.String org.bukkit.Server.getBukkitVersion{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="returnType[11: java.lang.String org.bukkit.Server.getBukkitVersion{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="declaredException[11: java.lang.String org.bukkit.Server.getBukkitVersion{}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isStatic[12: java.util.Collection&lt;? extends org.bukkit.entity.Player&gt; org.bukkit.Server.getOnlinePlayers{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isDeprecated[12: java.util.Collection&lt;? extends org.bukkit.entity.Player&gt; org.bukkit.Server.getOnlinePlayers{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="parameterTypes[12: java.util.Collection&lt;? extends org.bukkit.entity.Player&gt; org.bukkit.Server.getOnlinePlayers{}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="returnType[12: java.util.Collection&lt;? extends org.bukkit.entity.Player&gt; org.bukkit.Server.getOnlinePlayers{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="declaredException[12: java.util.Collection&lt;? extends org.bukkit.entity.Player&gt; org.bukkit.Server.getOnlinePlayers{}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isStatic[13: int org.bukkit.Server.getMaxPlayers{}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isDeprecated[13: int org.bukkit.Server.getMaxPlayers{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="parameterTypes[13: int org.bukkit.Server.getMaxPlayers{}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="returnType[13: int org.bukkit.Server.getMaxPlayers{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="declaredException[13: int org.bukkit.Server.getMaxPlayers{}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isStatic[14: int org.bukkit.Server.getViewDistance{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isDeprecated[14: int org.bukkit.Server.getViewDistance{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="parameterTypes[14: int org.bukkit.Server.getViewDistance{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="returnType[14: int org.bukkit.Server.getViewDistance{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="declaredException[14: int org.bukkit.Server.getViewDistance{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isStatic[15: java.lang.String org.bukkit.Server.getServerName{}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isDeprecated[15: java.lang.String org.bukkit.Server.getServerName{}]" time="0.002"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="parameterTypes[15: java.lang.String org.bukkit.Server.getServerName{}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="returnType[15: java.lang.String org.bukkit.Server.getServerName{}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="declaredException[15: java.lang.String org.bukkit.Server.getServerName{}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isStatic[16: java.lang.String org.bukkit.Server.getServerId{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isDeprecated[16: java.lang.String org.bukkit.Server.getServerId{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="parameterTypes[16: java.lang.String org.bukkit.Server.getServerId{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="returnType[16: java.lang.String org.bukkit.Server.getServerId{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="declaredException[16: java.lang.String org.bukkit.Server.getServerId{}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isStatic[17: java.lang.String org.bukkit.Server.getWorldType{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isDeprecated[17: java.lang.String org.bukkit.Server.getWorldType{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="parameterTypes[17: java.lang.String org.bukkit.Server.getWorldType{}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="returnType[17: java.lang.String org.bukkit.Server.getWorldType{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="declaredException[17: java.lang.String org.bukkit.Server.getWorldType{}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isStatic[18: boolean org.bukkit.Server.getGenerateStructures{}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isDeprecated[18: boolean org.bukkit.Server.getGenerateStructures{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="parameterTypes[18: boolean org.bukkit.Server.getGenerateStructures{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="returnType[18: boolean org.bukkit.Server.getGenerateStructures{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="declaredException[18: boolean org.bukkit.Server.getGenerateStructures{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isStatic[19: boolean org.bukkit.Server.getAllowEnd{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isDeprecated[19: boolean org.bukkit.Server.getAllowEnd{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="parameterTypes[19: boolean org.bukkit.Server.getAllowEnd{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="returnType[19: boolean org.bukkit.Server.getAllowEnd{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="declaredException[19: boolean org.bukkit.Server.getAllowEnd{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isStatic[20: boolean org.bukkit.Server.getAllowNether{}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isDeprecated[20: boolean org.bukkit.Server.getAllowNether{}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="parameterTypes[20: boolean org.bukkit.Server.getAllowNether{}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="returnType[20: boolean org.bukkit.Server.getAllowNether{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="declaredException[20: boolean org.bukkit.Server.getAllowNether{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isStatic[21: boolean org.bukkit.Server.hasWhitelist{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isDeprecated[21: boolean org.bukkit.Server.hasWhitelist{}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="parameterTypes[21: boolean org.bukkit.Server.hasWhitelist{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="returnType[21: boolean org.bukkit.Server.hasWhitelist{}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="declaredException[21: boolean org.bukkit.Server.hasWhitelist{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isStatic[22: void org.bukkit.Server.setWhitelist{boolean}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isDeprecated[22: void org.bukkit.Server.setWhitelist{boolean}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="parameterTypes[22: void org.bukkit.Server.setWhitelist{boolean}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="returnType[22: void org.bukkit.Server.setWhitelist{boolean}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="declaredException[22: void org.bukkit.Server.setWhitelist{boolean}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isStatic[23: java.util.Set&lt;org.bukkit.OfflinePlayer&gt; org.bukkit.Server.getWhitelistedPlayers{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isDeprecated[23: java.util.Set&lt;org.bukkit.OfflinePlayer&gt; org.bukkit.Server.getWhitelistedPlayers{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="parameterTypes[23: java.util.Set&lt;org.bukkit.OfflinePlayer&gt; org.bukkit.Server.getWhitelistedPlayers{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="returnType[23: java.util.Set&lt;org.bukkit.OfflinePlayer&gt; org.bukkit.Server.getWhitelistedPlayers{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="declaredException[23: java.util.Set&lt;org.bukkit.OfflinePlayer&gt; org.bukkit.Server.getWhitelistedPlayers{}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isStatic[24: void org.bukkit.Server.reloadWhitelist{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isDeprecated[24: void org.bukkit.Server.reloadWhitelist{}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="parameterTypes[24: void org.bukkit.Server.reloadWhitelist{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="returnType[24: void org.bukkit.Server.reloadWhitelist{}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="declaredException[24: void org.bukkit.Server.reloadWhitelist{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isStatic[25: int org.bukkit.Server.broadcastMessage{java.lang.String}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isDeprecated[25: int org.bukkit.Server.broadcastMessage{java.lang.String}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="parameterTypes[25: int org.bukkit.Server.broadcastMessage{java.lang.String}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="returnType[25: int org.bukkit.Server.broadcastMessage{java.lang.String}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="declaredException[25: int org.bukkit.Server.broadcastMessage{java.lang.String}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isStatic[26: java.lang.String org.bukkit.Server.getUpdateFolder{}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isDeprecated[26: java.lang.String org.bukkit.Server.getUpdateFolder{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="parameterTypes[26: java.lang.String org.bukkit.Server.getUpdateFolder{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="returnType[26: java.lang.String org.bukkit.Server.getUpdateFolder{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="declaredException[26: java.lang.String org.bukkit.Server.getUpdateFolder{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isStatic[27: java.io.File org.bukkit.Server.getUpdateFolderFile{}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isDeprecated[27: java.io.File org.bukkit.Server.getUpdateFolderFile{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="parameterTypes[27: java.io.File org.bukkit.Server.getUpdateFolderFile{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="returnType[27: java.io.File org.bukkit.Server.getUpdateFolderFile{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="declaredException[27: java.io.File org.bukkit.Server.getUpdateFolderFile{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isStatic[28: long org.bukkit.Server.getConnectionThrottle{}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isDeprecated[28: long org.bukkit.Server.getConnectionThrottle{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="parameterTypes[28: long org.bukkit.Server.getConnectionThrottle{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="returnType[28: long org.bukkit.Server.getConnectionThrottle{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="declaredException[28: long org.bukkit.Server.getConnectionThrottle{}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isStatic[29: int org.bukkit.Server.getTicksPerAnimalSpawns{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isDeprecated[29: int org.bukkit.Server.getTicksPerAnimalSpawns{}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="parameterTypes[29: int org.bukkit.Server.getTicksPerAnimalSpawns{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="returnType[29: int org.bukkit.Server.getTicksPerAnimalSpawns{}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="declaredException[29: int org.bukkit.Server.getTicksPerAnimalSpawns{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isStatic[30: int org.bukkit.Server.getTicksPerMonsterSpawns{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isDeprecated[30: int org.bukkit.Server.getTicksPerMonsterSpawns{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="parameterTypes[30: int org.bukkit.Server.getTicksPerMonsterSpawns{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="returnType[30: int org.bukkit.Server.getTicksPerMonsterSpawns{}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="declaredException[30: int org.bukkit.Server.getTicksPerMonsterSpawns{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isStatic[31: org.bukkit.entity.Player org.bukkit.Server.getPlayerExact{java.lang.String}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isDeprecated[31: org.bukkit.entity.Player org.bukkit.Server.getPlayerExact{java.lang.String}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="parameterTypes[31: org.bukkit.entity.Player org.bukkit.Server.getPlayerExact{java.lang.String}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="returnType[31: org.bukkit.entity.Player org.bukkit.Server.getPlayerExact{java.lang.String}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="declaredException[31: org.bukkit.entity.Player org.bukkit.Server.getPlayerExact{java.lang.String}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isStatic[32: java.util.List&lt;org.bukkit.entity.Player&gt; org.bukkit.Server.matchPlayer{java.lang.String}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isDeprecated[32: java.util.List&lt;org.bukkit.entity.Player&gt; org.bukkit.Server.matchPlayer{java.lang.String}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="parameterTypes[32: java.util.List&lt;org.bukkit.entity.Player&gt; org.bukkit.Server.matchPlayer{java.lang.String}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="returnType[32: java.util.List&lt;org.bukkit.entity.Player&gt; org.bukkit.Server.matchPlayer{java.lang.String}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="declaredException[32: java.util.List&lt;org.bukkit.entity.Player&gt; org.bukkit.Server.matchPlayer{java.lang.String}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isStatic[33: org.bukkit.scheduler.BukkitScheduler org.bukkit.Server.getScheduler{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isDeprecated[33: org.bukkit.scheduler.BukkitScheduler org.bukkit.Server.getScheduler{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="parameterTypes[33: org.bukkit.scheduler.BukkitScheduler org.bukkit.Server.getScheduler{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="returnType[33: org.bukkit.scheduler.BukkitScheduler org.bukkit.Server.getScheduler{}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="declaredException[33: org.bukkit.scheduler.BukkitScheduler org.bukkit.Server.getScheduler{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isStatic[34: org.bukkit.plugin.ServicesManager org.bukkit.Server.getServicesManager{}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isDeprecated[34: org.bukkit.plugin.ServicesManager org.bukkit.Server.getServicesManager{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="parameterTypes[34: org.bukkit.plugin.ServicesManager org.bukkit.Server.getServicesManager{}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="returnType[34: org.bukkit.plugin.ServicesManager org.bukkit.Server.getServicesManager{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="declaredException[34: org.bukkit.plugin.ServicesManager org.bukkit.Server.getServicesManager{}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isStatic[35: java.util.List&lt;org.bukkit.World&gt; org.bukkit.Server.getWorlds{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isDeprecated[35: java.util.List&lt;org.bukkit.World&gt; org.bukkit.Server.getWorlds{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="parameterTypes[35: java.util.List&lt;org.bukkit.World&gt; org.bukkit.Server.getWorlds{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="returnType[35: java.util.List&lt;org.bukkit.World&gt; org.bukkit.Server.getWorlds{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="declaredException[35: java.util.List&lt;org.bukkit.World&gt; org.bukkit.Server.getWorlds{}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isStatic[36: org.bukkit.World org.bukkit.Server.createWorld{org.bukkit.WorldCreator}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isDeprecated[36: org.bukkit.World org.bukkit.Server.createWorld{org.bukkit.WorldCreator}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="parameterTypes[36: org.bukkit.World org.bukkit.Server.createWorld{org.bukkit.WorldCreator}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="returnType[36: org.bukkit.World org.bukkit.Server.createWorld{org.bukkit.WorldCreator}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="declaredException[36: org.bukkit.World org.bukkit.Server.createWorld{org.bukkit.WorldCreator}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isStatic[37: boolean org.bukkit.Server.unloadWorld{org.bukkit.World,boolean}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isDeprecated[37: boolean org.bukkit.Server.unloadWorld{org.bukkit.World,boolean}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="parameterTypes[37: boolean org.bukkit.Server.unloadWorld{org.bukkit.World,boolean}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="returnType[37: boolean org.bukkit.Server.unloadWorld{org.bukkit.World,boolean}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="declaredException[37: boolean org.bukkit.Server.unloadWorld{org.bukkit.World,boolean}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isStatic[38: boolean org.bukkit.Server.unloadWorld{java.lang.String,boolean}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isDeprecated[38: boolean org.bukkit.Server.unloadWorld{java.lang.String,boolean}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="parameterTypes[38: boolean org.bukkit.Server.unloadWorld{java.lang.String,boolean}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="returnType[38: boolean org.bukkit.Server.unloadWorld{java.lang.String,boolean}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="declaredException[38: boolean org.bukkit.Server.unloadWorld{java.lang.String,boolean}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isStatic[39: org.bukkit.inventory.ItemStack org.bukkit.Server.createExplorerMap{org.bukkit.World,org.bukkit.Location,org.bukkit.StructureType,int,boolean}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isDeprecated[39: org.bukkit.inventory.ItemStack org.bukkit.Server.createExplorerMap{org.bukkit.World,org.bukkit.Location,org.bukkit.StructureType,int,boolean}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="parameterTypes[39: org.bukkit.inventory.ItemStack org.bukkit.Server.createExplorerMap{org.bukkit.World,org.bukkit.Location,org.bukkit.StructureType,int,boolean}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="returnType[39: org.bukkit.inventory.ItemStack org.bukkit.Server.createExplorerMap{org.bukkit.World,org.bukkit.Location,org.bukkit.StructureType,int,boolean}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="declaredException[39: org.bukkit.inventory.ItemStack org.bukkit.Server.createExplorerMap{org.bukkit.World,org.bukkit.Location,org.bukkit.StructureType,int,boolean}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isStatic[40: org.bukkit.inventory.ItemStack org.bukkit.Server.createExplorerMap{org.bukkit.World,org.bukkit.Location,org.bukkit.StructureType}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isDeprecated[40: org.bukkit.inventory.ItemStack org.bukkit.Server.createExplorerMap{org.bukkit.World,org.bukkit.Location,org.bukkit.StructureType}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="parameterTypes[40: org.bukkit.inventory.ItemStack org.bukkit.Server.createExplorerMap{org.bukkit.World,org.bukkit.Location,org.bukkit.StructureType}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="returnType[40: org.bukkit.inventory.ItemStack org.bukkit.Server.createExplorerMap{org.bukkit.World,org.bukkit.Location,org.bukkit.StructureType}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="declaredException[40: org.bukkit.inventory.ItemStack org.bukkit.Server.createExplorerMap{org.bukkit.World,org.bukkit.Location,org.bukkit.StructureType}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isStatic[41: void org.bukkit.Server.reload{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isDeprecated[41: void org.bukkit.Server.reload{}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="parameterTypes[41: void org.bukkit.Server.reload{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="returnType[41: void org.bukkit.Server.reload{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="declaredException[41: void org.bukkit.Server.reload{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isStatic[42: void org.bukkit.Server.reloadData{}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isDeprecated[42: void org.bukkit.Server.reloadData{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="parameterTypes[42: void org.bukkit.Server.reloadData{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="returnType[42: void org.bukkit.Server.reloadData{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="declaredException[42: void org.bukkit.Server.reloadData{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isStatic[43: org.bukkit.command.PluginCommand org.bukkit.Server.getPluginCommand{java.lang.String}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isDeprecated[43: org.bukkit.command.PluginCommand org.bukkit.Server.getPluginCommand{java.lang.String}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="parameterTypes[43: org.bukkit.command.PluginCommand org.bukkit.Server.getPluginCommand{java.lang.String}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="returnType[43: org.bukkit.command.PluginCommand org.bukkit.Server.getPluginCommand{java.lang.String}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="declaredException[43: org.bukkit.command.PluginCommand org.bukkit.Server.getPluginCommand{java.lang.String}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isStatic[44: void org.bukkit.Server.savePlayers{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isDeprecated[44: void org.bukkit.Server.savePlayers{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="parameterTypes[44: void org.bukkit.Server.savePlayers{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="returnType[44: void org.bukkit.Server.savePlayers{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="declaredException[44: void org.bukkit.Server.savePlayers{}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isStatic[45: boolean org.bukkit.Server.dispatchCommand{org.bukkit.command.CommandSender,java.lang.String} throws org.bukkit.command.CommandException]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isDeprecated[45: boolean org.bukkit.Server.dispatchCommand{org.bukkit.command.CommandSender,java.lang.String} throws org.bukkit.command.CommandException]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="parameterTypes[45: boolean org.bukkit.Server.dispatchCommand{org.bukkit.command.CommandSender,java.lang.String} throws org.bukkit.command.CommandException]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="returnType[45: boolean org.bukkit.Server.dispatchCommand{org.bukkit.command.CommandSender,java.lang.String} throws org.bukkit.command.CommandException]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="declaredException[45: boolean org.bukkit.Server.dispatchCommand{org.bukkit.command.CommandSender,java.lang.String} throws org.bukkit.command.CommandException]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isStatic[46: boolean org.bukkit.Server.addRecipe{org.bukkit.inventory.Recipe}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isDeprecated[46: boolean org.bukkit.Server.addRecipe{org.bukkit.inventory.Recipe}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="parameterTypes[46: boolean org.bukkit.Server.addRecipe{org.bukkit.inventory.Recipe}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="returnType[46: boolean org.bukkit.Server.addRecipe{org.bukkit.inventory.Recipe}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="declaredException[46: boolean org.bukkit.Server.addRecipe{org.bukkit.inventory.Recipe}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isStatic[47: java.util.List&lt;org.bukkit.inventory.Recipe&gt; org.bukkit.Server.getRecipesFor{org.bukkit.inventory.ItemStack}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isDeprecated[47: java.util.List&lt;org.bukkit.inventory.Recipe&gt; org.bukkit.Server.getRecipesFor{org.bukkit.inventory.ItemStack}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="parameterTypes[47: java.util.List&lt;org.bukkit.inventory.Recipe&gt; org.bukkit.Server.getRecipesFor{org.bukkit.inventory.ItemStack}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="returnType[47: java.util.List&lt;org.bukkit.inventory.Recipe&gt; org.bukkit.Server.getRecipesFor{org.bukkit.inventory.ItemStack}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="declaredException[47: java.util.List&lt;org.bukkit.inventory.Recipe&gt; org.bukkit.Server.getRecipesFor{org.bukkit.inventory.ItemStack}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isStatic[48: java.util.Iterator&lt;org.bukkit.inventory.Recipe&gt; org.bukkit.Server.recipeIterator{}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isDeprecated[48: java.util.Iterator&lt;org.bukkit.inventory.Recipe&gt; org.bukkit.Server.recipeIterator{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="parameterTypes[48: java.util.Iterator&lt;org.bukkit.inventory.Recipe&gt; org.bukkit.Server.recipeIterator{}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="returnType[48: java.util.Iterator&lt;org.bukkit.inventory.Recipe&gt; org.bukkit.Server.recipeIterator{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="declaredException[48: java.util.Iterator&lt;org.bukkit.inventory.Recipe&gt; org.bukkit.Server.recipeIterator{}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isStatic[49: void org.bukkit.Server.clearRecipes{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isDeprecated[49: void org.bukkit.Server.clearRecipes{}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="parameterTypes[49: void org.bukkit.Server.clearRecipes{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="returnType[49: void org.bukkit.Server.clearRecipes{}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="declaredException[49: void org.bukkit.Server.clearRecipes{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isStatic[50: void org.bukkit.Server.resetRecipes{}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isDeprecated[50: void org.bukkit.Server.resetRecipes{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="parameterTypes[50: void org.bukkit.Server.resetRecipes{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="returnType[50: void org.bukkit.Server.resetRecipes{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="declaredException[50: void org.bukkit.Server.resetRecipes{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isStatic[51: java.util.Map&lt;java.lang.String, java.lang.String[]&gt; org.bukkit.Server.getCommandAliases{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isDeprecated[51: java.util.Map&lt;java.lang.String, java.lang.String[]&gt; org.bukkit.Server.getCommandAliases{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="parameterTypes[51: java.util.Map&lt;java.lang.String, java.lang.String[]&gt; org.bukkit.Server.getCommandAliases{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="returnType[51: java.util.Map&lt;java.lang.String, java.lang.String[]&gt; org.bukkit.Server.getCommandAliases{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="declaredException[51: java.util.Map&lt;java.lang.String, java.lang.String[]&gt; org.bukkit.Server.getCommandAliases{}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isStatic[52: int org.bukkit.Server.getSpawnRadius{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isDeprecated[52: int org.bukkit.Server.getSpawnRadius{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="parameterTypes[52: int org.bukkit.Server.getSpawnRadius{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="returnType[52: int org.bukkit.Server.getSpawnRadius{}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="declaredException[52: int org.bukkit.Server.getSpawnRadius{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isStatic[53: void org.bukkit.Server.setSpawnRadius{int}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isDeprecated[53: void org.bukkit.Server.setSpawnRadius{int}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="parameterTypes[53: void org.bukkit.Server.setSpawnRadius{int}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="returnType[53: void org.bukkit.Server.setSpawnRadius{int}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="declaredException[53: void org.bukkit.Server.setSpawnRadius{int}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isStatic[54: boolean org.bukkit.Server.getOnlineMode{}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isDeprecated[54: boolean org.bukkit.Server.getOnlineMode{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="parameterTypes[54: boolean org.bukkit.Server.getOnlineMode{}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="returnType[54: boolean org.bukkit.Server.getOnlineMode{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="declaredException[54: boolean org.bukkit.Server.getOnlineMode{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isStatic[55: boolean org.bukkit.Server.isHardcore{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isDeprecated[55: boolean org.bukkit.Server.isHardcore{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="parameterTypes[55: boolean org.bukkit.Server.isHardcore{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="returnType[55: boolean org.bukkit.Server.isHardcore{}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="declaredException[55: boolean org.bukkit.Server.isHardcore{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isStatic[56: int org.bukkit.Server.broadcast{java.lang.String,java.lang.String}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isDeprecated[56: int org.bukkit.Server.broadcast{java.lang.String,java.lang.String}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="parameterTypes[56: int org.bukkit.Server.broadcast{java.lang.String,java.lang.String}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="returnType[56: int org.bukkit.Server.broadcast{java.lang.String,java.lang.String}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="declaredException[56: int org.bukkit.Server.broadcast{java.lang.String,java.lang.String}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isStatic[57: java.util.Set&lt;java.lang.String&gt; org.bukkit.Server.getIPBans{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isDeprecated[57: java.util.Set&lt;java.lang.String&gt; org.bukkit.Server.getIPBans{}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="parameterTypes[57: java.util.Set&lt;java.lang.String&gt; org.bukkit.Server.getIPBans{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="returnType[57: java.util.Set&lt;java.lang.String&gt; org.bukkit.Server.getIPBans{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="declaredException[57: java.util.Set&lt;java.lang.String&gt; org.bukkit.Server.getIPBans{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isStatic[58: void org.bukkit.Server.banIP{java.lang.String}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isDeprecated[58: void org.bukkit.Server.banIP{java.lang.String}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="parameterTypes[58: void org.bukkit.Server.banIP{java.lang.String}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="returnType[58: void org.bukkit.Server.banIP{java.lang.String}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="declaredException[58: void org.bukkit.Server.banIP{java.lang.String}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isStatic[59: void org.bukkit.Server.unbanIP{java.lang.String}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isDeprecated[59: void org.bukkit.Server.unbanIP{java.lang.String}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="parameterTypes[59: void org.bukkit.Server.unbanIP{java.lang.String}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="returnType[59: void org.bukkit.Server.unbanIP{java.lang.String}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="declaredException[59: void org.bukkit.Server.unbanIP{java.lang.String}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isStatic[60: java.util.Set&lt;org.bukkit.OfflinePlayer&gt; org.bukkit.Server.getBannedPlayers{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isDeprecated[60: java.util.Set&lt;org.bukkit.OfflinePlayer&gt; org.bukkit.Server.getBannedPlayers{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="parameterTypes[60: java.util.Set&lt;org.bukkit.OfflinePlayer&gt; org.bukkit.Server.getBannedPlayers{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="returnType[60: java.util.Set&lt;org.bukkit.OfflinePlayer&gt; org.bukkit.Server.getBannedPlayers{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="declaredException[60: java.util.Set&lt;org.bukkit.OfflinePlayer&gt; org.bukkit.Server.getBannedPlayers{}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isStatic[61: org.bukkit.BanList org.bukkit.Server.getBanList{org.bukkit.BanList$Type}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isDeprecated[61: org.bukkit.BanList org.bukkit.Server.getBanList{org.bukkit.BanList$Type}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="parameterTypes[61: org.bukkit.BanList org.bukkit.Server.getBanList{org.bukkit.BanList$Type}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="returnType[61: org.bukkit.BanList org.bukkit.Server.getBanList{org.bukkit.BanList$Type}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="declaredException[61: org.bukkit.BanList org.bukkit.Server.getBanList{org.bukkit.BanList$Type}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isStatic[62: java.util.Set&lt;org.bukkit.OfflinePlayer&gt; org.bukkit.Server.getOperators{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isDeprecated[62: java.util.Set&lt;org.bukkit.OfflinePlayer&gt; org.bukkit.Server.getOperators{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="parameterTypes[62: java.util.Set&lt;org.bukkit.OfflinePlayer&gt; org.bukkit.Server.getOperators{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="returnType[62: java.util.Set&lt;org.bukkit.OfflinePlayer&gt; org.bukkit.Server.getOperators{}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="declaredException[62: java.util.Set&lt;org.bukkit.OfflinePlayer&gt; org.bukkit.Server.getOperators{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isStatic[63: org.bukkit.GameMode org.bukkit.Server.getDefaultGameMode{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isDeprecated[63: org.bukkit.GameMode org.bukkit.Server.getDefaultGameMode{}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="parameterTypes[63: org.bukkit.GameMode org.bukkit.Server.getDefaultGameMode{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="returnType[63: org.bukkit.GameMode org.bukkit.Server.getDefaultGameMode{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="declaredException[63: org.bukkit.GameMode org.bukkit.Server.getDefaultGameMode{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isStatic[64: void org.bukkit.Server.setDefaultGameMode{org.bukkit.GameMode}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isDeprecated[64: void org.bukkit.Server.setDefaultGameMode{org.bukkit.GameMode}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="parameterTypes[64: void org.bukkit.Server.setDefaultGameMode{org.bukkit.GameMode}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="returnType[64: void org.bukkit.Server.setDefaultGameMode{org.bukkit.GameMode}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="declaredException[64: void org.bukkit.Server.setDefaultGameMode{org.bukkit.GameMode}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isStatic[65: org.bukkit.command.ConsoleCommandSender org.bukkit.Server.getConsoleSender{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isDeprecated[65: org.bukkit.command.ConsoleCommandSender org.bukkit.Server.getConsoleSender{}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="parameterTypes[65: org.bukkit.command.ConsoleCommandSender org.bukkit.Server.getConsoleSender{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="returnType[65: org.bukkit.command.ConsoleCommandSender org.bukkit.Server.getConsoleSender{}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="declaredException[65: org.bukkit.command.ConsoleCommandSender org.bukkit.Server.getConsoleSender{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isStatic[66: java.io.File org.bukkit.Server.getWorldContainer{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isDeprecated[66: java.io.File org.bukkit.Server.getWorldContainer{}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="parameterTypes[66: java.io.File org.bukkit.Server.getWorldContainer{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="returnType[66: java.io.File org.bukkit.Server.getWorldContainer{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="declaredException[66: java.io.File org.bukkit.Server.getWorldContainer{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isStatic[67: org.bukkit.OfflinePlayer[] org.bukkit.Server.getOfflinePlayers{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isDeprecated[67: org.bukkit.OfflinePlayer[] org.bukkit.Server.getOfflinePlayers{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="parameterTypes[67: org.bukkit.OfflinePlayer[] org.bukkit.Server.getOfflinePlayers{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="returnType[67: org.bukkit.OfflinePlayer[] org.bukkit.Server.getOfflinePlayers{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="declaredException[67: org.bukkit.OfflinePlayer[] org.bukkit.Server.getOfflinePlayers{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isStatic[68: org.bukkit.help.HelpMap org.bukkit.Server.getHelpMap{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isDeprecated[68: org.bukkit.help.HelpMap org.bukkit.Server.getHelpMap{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="parameterTypes[68: org.bukkit.help.HelpMap org.bukkit.Server.getHelpMap{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="returnType[68: org.bukkit.help.HelpMap org.bukkit.Server.getHelpMap{}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="declaredException[68: org.bukkit.help.HelpMap org.bukkit.Server.getHelpMap{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isStatic[69: org.bukkit.inventory.Inventory org.bukkit.Server.createInventory{org.bukkit.inventory.InventoryHolder,int} throws java.lang.IllegalArgumentException]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isDeprecated[69: org.bukkit.inventory.Inventory org.bukkit.Server.createInventory{org.bukkit.inventory.InventoryHolder,int} throws java.lang.IllegalArgumentException]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="parameterTypes[69: org.bukkit.inventory.Inventory org.bukkit.Server.createInventory{org.bukkit.inventory.InventoryHolder,int} throws java.lang.IllegalArgumentException]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="returnType[69: org.bukkit.inventory.Inventory org.bukkit.Server.createInventory{org.bukkit.inventory.InventoryHolder,int} throws java.lang.IllegalArgumentException]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="declaredException[69: org.bukkit.inventory.Inventory org.bukkit.Server.createInventory{org.bukkit.inventory.InventoryHolder,int} throws java.lang.IllegalArgumentException]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isStatic[70: org.bukkit.inventory.Inventory org.bukkit.Server.createInventory{org.bukkit.inventory.InventoryHolder,org.bukkit.event.inventory.InventoryType}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isDeprecated[70: org.bukkit.inventory.Inventory org.bukkit.Server.createInventory{org.bukkit.inventory.InventoryHolder,org.bukkit.event.inventory.InventoryType}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="parameterTypes[70: org.bukkit.inventory.Inventory org.bukkit.Server.createInventory{org.bukkit.inventory.InventoryHolder,org.bukkit.event.inventory.InventoryType}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="returnType[70: org.bukkit.inventory.Inventory org.bukkit.Server.createInventory{org.bukkit.inventory.InventoryHolder,org.bukkit.event.inventory.InventoryType}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="declaredException[70: org.bukkit.inventory.Inventory org.bukkit.Server.createInventory{org.bukkit.inventory.InventoryHolder,org.bukkit.event.inventory.InventoryType}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isStatic[71: org.bukkit.inventory.Inventory org.bukkit.Server.createInventory{org.bukkit.inventory.InventoryHolder,org.bukkit.event.inventory.InventoryType,java.lang.String}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isDeprecated[71: org.bukkit.inventory.Inventory org.bukkit.Server.createInventory{org.bukkit.inventory.InventoryHolder,org.bukkit.event.inventory.InventoryType,java.lang.String}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="parameterTypes[71: org.bukkit.inventory.Inventory org.bukkit.Server.createInventory{org.bukkit.inventory.InventoryHolder,org.bukkit.event.inventory.InventoryType,java.lang.String}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="returnType[71: org.bukkit.inventory.Inventory org.bukkit.Server.createInventory{org.bukkit.inventory.InventoryHolder,org.bukkit.event.inventory.InventoryType,java.lang.String}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="declaredException[71: org.bukkit.inventory.Inventory org.bukkit.Server.createInventory{org.bukkit.inventory.InventoryHolder,org.bukkit.event.inventory.InventoryType,java.lang.String}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isStatic[72: org.bukkit.inventory.Inventory org.bukkit.Server.createInventory{org.bukkit.inventory.InventoryHolder,int,java.lang.String} throws java.lang.IllegalArgumentException]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isDeprecated[72: org.bukkit.inventory.Inventory org.bukkit.Server.createInventory{org.bukkit.inventory.InventoryHolder,int,java.lang.String} throws java.lang.IllegalArgumentException]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="parameterTypes[72: org.bukkit.inventory.Inventory org.bukkit.Server.createInventory{org.bukkit.inventory.InventoryHolder,int,java.lang.String} throws java.lang.IllegalArgumentException]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="returnType[72: org.bukkit.inventory.Inventory org.bukkit.Server.createInventory{org.bukkit.inventory.InventoryHolder,int,java.lang.String} throws java.lang.IllegalArgumentException]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="declaredException[72: org.bukkit.inventory.Inventory org.bukkit.Server.createInventory{org.bukkit.inventory.InventoryHolder,int,java.lang.String} throws java.lang.IllegalArgumentException]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isStatic[73: org.bukkit.inventory.Merchant org.bukkit.Server.createMerchant{java.lang.String}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isDeprecated[73: org.bukkit.inventory.Merchant org.bukkit.Server.createMerchant{java.lang.String}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="parameterTypes[73: org.bukkit.inventory.Merchant org.bukkit.Server.createMerchant{java.lang.String}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="returnType[73: org.bukkit.inventory.Merchant org.bukkit.Server.createMerchant{java.lang.String}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="declaredException[73: org.bukkit.inventory.Merchant org.bukkit.Server.createMerchant{java.lang.String}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isStatic[74: int org.bukkit.Server.getMonsterSpawnLimit{}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isDeprecated[74: int org.bukkit.Server.getMonsterSpawnLimit{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="parameterTypes[74: int org.bukkit.Server.getMonsterSpawnLimit{}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="returnType[74: int org.bukkit.Server.getMonsterSpawnLimit{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="declaredException[74: int org.bukkit.Server.getMonsterSpawnLimit{}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isStatic[75: int org.bukkit.Server.getAnimalSpawnLimit{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isDeprecated[75: int org.bukkit.Server.getAnimalSpawnLimit{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="parameterTypes[75: int org.bukkit.Server.getAnimalSpawnLimit{}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="returnType[75: int org.bukkit.Server.getAnimalSpawnLimit{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="declaredException[75: int org.bukkit.Server.getAnimalSpawnLimit{}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isStatic[76: int org.bukkit.Server.getWaterAnimalSpawnLimit{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isDeprecated[76: int org.bukkit.Server.getWaterAnimalSpawnLimit{}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="parameterTypes[76: int org.bukkit.Server.getWaterAnimalSpawnLimit{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="returnType[76: int org.bukkit.Server.getWaterAnimalSpawnLimit{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="declaredException[76: int org.bukkit.Server.getWaterAnimalSpawnLimit{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isStatic[77: int org.bukkit.Server.getAmbientSpawnLimit{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isDeprecated[77: int org.bukkit.Server.getAmbientSpawnLimit{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="parameterTypes[77: int org.bukkit.Server.getAmbientSpawnLimit{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="returnType[77: int org.bukkit.Server.getAmbientSpawnLimit{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="declaredException[77: int org.bukkit.Server.getAmbientSpawnLimit{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isStatic[78: boolean org.bukkit.Server.isPrimaryThread{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isDeprecated[78: boolean org.bukkit.Server.isPrimaryThread{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="parameterTypes[78: boolean org.bukkit.Server.isPrimaryThread{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="returnType[78: boolean org.bukkit.Server.isPrimaryThread{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="declaredException[78: boolean org.bukkit.Server.isPrimaryThread{}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isStatic[79: java.lang.String org.bukkit.Server.getMotd{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isDeprecated[79: java.lang.String org.bukkit.Server.getMotd{}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="parameterTypes[79: java.lang.String org.bukkit.Server.getMotd{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="returnType[79: java.lang.String org.bukkit.Server.getMotd{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="declaredException[79: java.lang.String org.bukkit.Server.getMotd{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isStatic[80: java.lang.String org.bukkit.Server.getShutdownMessage{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isDeprecated[80: java.lang.String org.bukkit.Server.getShutdownMessage{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="parameterTypes[80: java.lang.String org.bukkit.Server.getShutdownMessage{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="returnType[80: java.lang.String org.bukkit.Server.getShutdownMessage{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="declaredException[80: java.lang.String org.bukkit.Server.getShutdownMessage{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isStatic[81: org.bukkit.Warning$WarningState org.bukkit.Server.getWarningState{}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isDeprecated[81: org.bukkit.Warning$WarningState org.bukkit.Server.getWarningState{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="parameterTypes[81: org.bukkit.Warning$WarningState org.bukkit.Server.getWarningState{}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="returnType[81: org.bukkit.Warning$WarningState org.bukkit.Server.getWarningState{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="declaredException[81: org.bukkit.Warning$WarningState org.bukkit.Server.getWarningState{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isStatic[82: org.bukkit.inventory.ItemFactory org.bukkit.Server.getItemFactory{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isDeprecated[82: org.bukkit.inventory.ItemFactory org.bukkit.Server.getItemFactory{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="parameterTypes[82: org.bukkit.inventory.ItemFactory org.bukkit.Server.getItemFactory{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="returnType[82: org.bukkit.inventory.ItemFactory org.bukkit.Server.getItemFactory{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="declaredException[82: org.bukkit.inventory.ItemFactory org.bukkit.Server.getItemFactory{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isStatic[83: org.bukkit.scoreboard.ScoreboardManager org.bukkit.Server.getScoreboardManager{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isDeprecated[83: org.bukkit.scoreboard.ScoreboardManager org.bukkit.Server.getScoreboardManager{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="parameterTypes[83: org.bukkit.scoreboard.ScoreboardManager org.bukkit.Server.getScoreboardManager{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="returnType[83: org.bukkit.scoreboard.ScoreboardManager org.bukkit.Server.getScoreboardManager{}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="declaredException[83: org.bukkit.scoreboard.ScoreboardManager org.bukkit.Server.getScoreboardManager{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isStatic[84: org.bukkit.util.CachedServerIcon org.bukkit.Server.getServerIcon{}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isDeprecated[84: org.bukkit.util.CachedServerIcon org.bukkit.Server.getServerIcon{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="parameterTypes[84: org.bukkit.util.CachedServerIcon org.bukkit.Server.getServerIcon{}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="returnType[84: org.bukkit.util.CachedServerIcon org.bukkit.Server.getServerIcon{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="declaredException[84: org.bukkit.util.CachedServerIcon org.bukkit.Server.getServerIcon{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isStatic[85: org.bukkit.util.CachedServerIcon org.bukkit.Server.loadServerIcon{java.awt.image.BufferedImage} throws java.lang.IllegalArgumentException,java.lang.Exception]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isDeprecated[85: org.bukkit.util.CachedServerIcon org.bukkit.Server.loadServerIcon{java.awt.image.BufferedImage} throws java.lang.IllegalArgumentException,java.lang.Exception]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="parameterTypes[85: org.bukkit.util.CachedServerIcon org.bukkit.Server.loadServerIcon{java.awt.image.BufferedImage} throws java.lang.IllegalArgumentException,java.lang.Exception]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="returnType[85: org.bukkit.util.CachedServerIcon org.bukkit.Server.loadServerIcon{java.awt.image.BufferedImage} throws java.lang.IllegalArgumentException,java.lang.Exception]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="declaredException[85: org.bukkit.util.CachedServerIcon org.bukkit.Server.loadServerIcon{java.awt.image.BufferedImage} throws java.lang.IllegalArgumentException,java.lang.Exception]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isStatic[86: org.bukkit.util.CachedServerIcon org.bukkit.Server.loadServerIcon{java.io.File} throws java.lang.IllegalArgumentException,java.lang.Exception]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isDeprecated[86: org.bukkit.util.CachedServerIcon org.bukkit.Server.loadServerIcon{java.io.File} throws java.lang.IllegalArgumentException,java.lang.Exception]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="parameterTypes[86: org.bukkit.util.CachedServerIcon org.bukkit.Server.loadServerIcon{java.io.File} throws java.lang.IllegalArgumentException,java.lang.Exception]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="returnType[86: org.bukkit.util.CachedServerIcon org.bukkit.Server.loadServerIcon{java.io.File} throws java.lang.IllegalArgumentException,java.lang.Exception]" time="0.008"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="declaredException[86: org.bukkit.util.CachedServerIcon org.bukkit.Server.loadServerIcon{java.io.File} throws java.lang.IllegalArgumentException,java.lang.Exception]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isStatic[87: void org.bukkit.Server.setIdleTimeout{int}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isDeprecated[87: void org.bukkit.Server.setIdleTimeout{int}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="parameterTypes[87: void org.bukkit.Server.setIdleTimeout{int}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="returnType[87: void org.bukkit.Server.setIdleTimeout{int}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="declaredException[87: void org.bukkit.Server.setIdleTimeout{int}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isStatic[88: int org.bukkit.Server.getIdleTimeout{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isDeprecated[88: int org.bukkit.Server.getIdleTimeout{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="parameterTypes[88: int org.bukkit.Server.getIdleTimeout{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="returnType[88: int org.bukkit.Server.getIdleTimeout{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="declaredException[88: int org.bukkit.Server.getIdleTimeout{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isStatic[89: org.bukkit.generator.ChunkGenerator$ChunkData org.bukkit.Server.createChunkData{org.bukkit.World}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isDeprecated[89: org.bukkit.generator.ChunkGenerator$ChunkData org.bukkit.Server.createChunkData{org.bukkit.World}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="parameterTypes[89: org.bukkit.generator.ChunkGenerator$ChunkData org.bukkit.Server.createChunkData{org.bukkit.World}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="returnType[89: org.bukkit.generator.ChunkGenerator$ChunkData org.bukkit.Server.createChunkData{org.bukkit.World}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="declaredException[89: org.bukkit.generator.ChunkGenerator$ChunkData org.bukkit.Server.createChunkData{org.bukkit.World}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isStatic[90: org.bukkit.boss.KeyedBossBar org.bukkit.Server.createBossBar{org.bukkit.NamespacedKey,java.lang.String,org.bukkit.boss.BarColor,org.bukkit.boss.BarStyle,org.bukkit.boss.BarFlag...}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isDeprecated[90: org.bukkit.boss.KeyedBossBar org.bukkit.Server.createBossBar{org.bukkit.NamespacedKey,java.lang.String,org.bukkit.boss.BarColor,org.bukkit.boss.BarStyle,org.bukkit.boss.BarFlag...}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="parameterTypes[90: org.bukkit.boss.KeyedBossBar org.bukkit.Server.createBossBar{org.bukkit.NamespacedKey,java.lang.String,org.bukkit.boss.BarColor,org.bukkit.boss.BarStyle,org.bukkit.boss.BarFlag...}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="returnType[90: org.bukkit.boss.KeyedBossBar org.bukkit.Server.createBossBar{org.bukkit.NamespacedKey,java.lang.String,org.bukkit.boss.BarColor,org.bukkit.boss.BarStyle,org.bukkit.boss.BarFlag...}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="declaredException[90: org.bukkit.boss.KeyedBossBar org.bukkit.Server.createBossBar{org.bukkit.NamespacedKey,java.lang.String,org.bukkit.boss.BarColor,org.bukkit.boss.BarStyle,org.bukkit.boss.BarFlag...}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isStatic[91: org.bukkit.boss.BossBar org.bukkit.Server.createBossBar{java.lang.String,org.bukkit.boss.BarColor,org.bukkit.boss.BarStyle,org.bukkit.boss.BarFlag...}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isDeprecated[91: org.bukkit.boss.BossBar org.bukkit.Server.createBossBar{java.lang.String,org.bukkit.boss.BarColor,org.bukkit.boss.BarStyle,org.bukkit.boss.BarFlag...}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="parameterTypes[91: org.bukkit.boss.BossBar org.bukkit.Server.createBossBar{java.lang.String,org.bukkit.boss.BarColor,org.bukkit.boss.BarStyle,org.bukkit.boss.BarFlag...}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="returnType[91: org.bukkit.boss.BossBar org.bukkit.Server.createBossBar{java.lang.String,org.bukkit.boss.BarColor,org.bukkit.boss.BarStyle,org.bukkit.boss.BarFlag...}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="declaredException[91: org.bukkit.boss.BossBar org.bukkit.Server.createBossBar{java.lang.String,org.bukkit.boss.BarColor,org.bukkit.boss.BarStyle,org.bukkit.boss.BarFlag...}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isStatic[92: java.util.Iterator&lt;org.bukkit.boss.KeyedBossBar&gt; org.bukkit.Server.getBossBars{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isDeprecated[92: java.util.Iterator&lt;org.bukkit.boss.KeyedBossBar&gt; org.bukkit.Server.getBossBars{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="parameterTypes[92: java.util.Iterator&lt;org.bukkit.boss.KeyedBossBar&gt; org.bukkit.Server.getBossBars{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="returnType[92: java.util.Iterator&lt;org.bukkit.boss.KeyedBossBar&gt; org.bukkit.Server.getBossBars{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="declaredException[92: java.util.Iterator&lt;org.bukkit.boss.KeyedBossBar&gt; org.bukkit.Server.getBossBars{}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isStatic[93: org.bukkit.boss.KeyedBossBar org.bukkit.Server.getBossBar{org.bukkit.NamespacedKey}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isDeprecated[93: org.bukkit.boss.KeyedBossBar org.bukkit.Server.getBossBar{org.bukkit.NamespacedKey}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="parameterTypes[93: org.bukkit.boss.KeyedBossBar org.bukkit.Server.getBossBar{org.bukkit.NamespacedKey}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="returnType[93: org.bukkit.boss.KeyedBossBar org.bukkit.Server.getBossBar{org.bukkit.NamespacedKey}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="declaredException[93: org.bukkit.boss.KeyedBossBar org.bukkit.Server.getBossBar{org.bukkit.NamespacedKey}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isStatic[94: boolean org.bukkit.Server.removeBossBar{org.bukkit.NamespacedKey}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isDeprecated[94: boolean org.bukkit.Server.removeBossBar{org.bukkit.NamespacedKey}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="parameterTypes[94: boolean org.bukkit.Server.removeBossBar{org.bukkit.NamespacedKey}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="returnType[94: boolean org.bukkit.Server.removeBossBar{org.bukkit.NamespacedKey}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="declaredException[94: boolean org.bukkit.Server.removeBossBar{org.bukkit.NamespacedKey}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isStatic[95: org.bukkit.entity.Entity org.bukkit.Server.getEntity{java.util.UUID}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isDeprecated[95: org.bukkit.entity.Entity org.bukkit.Server.getEntity{java.util.UUID}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="parameterTypes[95: org.bukkit.entity.Entity org.bukkit.Server.getEntity{java.util.UUID}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="returnType[95: org.bukkit.entity.Entity org.bukkit.Server.getEntity{java.util.UUID}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="declaredException[95: org.bukkit.entity.Entity org.bukkit.Server.getEntity{java.util.UUID}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isStatic[96: org.bukkit.advancement.Advancement org.bukkit.Server.getAdvancement{org.bukkit.NamespacedKey}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isDeprecated[96: org.bukkit.advancement.Advancement org.bukkit.Server.getAdvancement{org.bukkit.NamespacedKey}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="parameterTypes[96: org.bukkit.advancement.Advancement org.bukkit.Server.getAdvancement{org.bukkit.NamespacedKey}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="returnType[96: org.bukkit.advancement.Advancement org.bukkit.Server.getAdvancement{org.bukkit.NamespacedKey}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="declaredException[96: org.bukkit.advancement.Advancement org.bukkit.Server.getAdvancement{org.bukkit.NamespacedKey}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isStatic[97: java.util.Iterator&lt;org.bukkit.advancement.Advancement&gt; org.bukkit.Server.advancementIterator{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isDeprecated[97: java.util.Iterator&lt;org.bukkit.advancement.Advancement&gt; org.bukkit.Server.advancementIterator{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="parameterTypes[97: java.util.Iterator&lt;org.bukkit.advancement.Advancement&gt; org.bukkit.Server.advancementIterator{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="returnType[97: java.util.Iterator&lt;org.bukkit.advancement.Advancement&gt; org.bukkit.Server.advancementIterator{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="declaredException[97: java.util.Iterator&lt;org.bukkit.advancement.Advancement&gt; org.bukkit.Server.advancementIterator{}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isStatic[98: org.bukkit.block.data.BlockData org.bukkit.Server.createBlockData{org.bukkit.Material,java.lang.String} throws java.lang.IllegalArgumentException]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isDeprecated[98: org.bukkit.block.data.BlockData org.bukkit.Server.createBlockData{org.bukkit.Material,java.lang.String} throws java.lang.IllegalArgumentException]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="parameterTypes[98: org.bukkit.block.data.BlockData org.bukkit.Server.createBlockData{org.bukkit.Material,java.lang.String} throws java.lang.IllegalArgumentException]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="returnType[98: org.bukkit.block.data.BlockData org.bukkit.Server.createBlockData{org.bukkit.Material,java.lang.String} throws java.lang.IllegalArgumentException]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="declaredException[98: org.bukkit.block.data.BlockData org.bukkit.Server.createBlockData{org.bukkit.Material,java.lang.String} throws java.lang.IllegalArgumentException]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isStatic[99: org.bukkit.block.data.BlockData org.bukkit.Server.createBlockData{java.lang.String} throws java.lang.IllegalArgumentException]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isDeprecated[99: org.bukkit.block.data.BlockData org.bukkit.Server.createBlockData{java.lang.String} throws java.lang.IllegalArgumentException]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="parameterTypes[99: org.bukkit.block.data.BlockData org.bukkit.Server.createBlockData{java.lang.String} throws java.lang.IllegalArgumentException]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="returnType[99: org.bukkit.block.data.BlockData org.bukkit.Server.createBlockData{java.lang.String} throws java.lang.IllegalArgumentException]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="declaredException[99: org.bukkit.block.data.BlockData org.bukkit.Server.createBlockData{java.lang.String} throws java.lang.IllegalArgumentException]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isStatic[100: org.bukkit.block.data.BlockData org.bukkit.Server.createBlockData{org.bukkit.Material,java.util.function.Consumer&lt;org.bukkit.block.data.BlockData&gt;}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isDeprecated[100: org.bukkit.block.data.BlockData org.bukkit.Server.createBlockData{org.bukkit.Material,java.util.function.Consumer&lt;org.bukkit.block.data.BlockData&gt;}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="parameterTypes[100: org.bukkit.block.data.BlockData org.bukkit.Server.createBlockData{org.bukkit.Material,java.util.function.Consumer&lt;org.bukkit.block.data.BlockData&gt;}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="returnType[100: org.bukkit.block.data.BlockData org.bukkit.Server.createBlockData{org.bukkit.Material,java.util.function.Consumer&lt;org.bukkit.block.data.BlockData&gt;}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="declaredException[100: org.bukkit.block.data.BlockData org.bukkit.Server.createBlockData{org.bukkit.Material,java.util.function.Consumer&lt;org.bukkit.block.data.BlockData&gt;}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isStatic[101: org.bukkit.block.data.BlockData org.bukkit.Server.createBlockData{org.bukkit.Material}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isDeprecated[101: org.bukkit.block.data.BlockData org.bukkit.Server.createBlockData{org.bukkit.Material}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="parameterTypes[101: org.bukkit.block.data.BlockData org.bukkit.Server.createBlockData{org.bukkit.Material}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="returnType[101: org.bukkit.block.data.BlockData org.bukkit.Server.createBlockData{org.bukkit.Material}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="declaredException[101: org.bukkit.block.data.BlockData org.bukkit.Server.createBlockData{org.bukkit.Material}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isStatic[102: &lt;T&gt; org.bukkit.Tag&lt;T&gt; org.bukkit.Server.getTag{java.lang.String,org.bukkit.NamespacedKey,java.lang.Class&lt;T&gt;}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isDeprecated[102: &lt;T&gt; org.bukkit.Tag&lt;T&gt; org.bukkit.Server.getTag{java.lang.String,org.bukkit.NamespacedKey,java.lang.Class&lt;T&gt;}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="parameterTypes[102: &lt;T&gt; org.bukkit.Tag&lt;T&gt; org.bukkit.Server.getTag{java.lang.String,org.bukkit.NamespacedKey,java.lang.Class&lt;T&gt;}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="returnType[102: &lt;T&gt; org.bukkit.Tag&lt;T&gt; org.bukkit.Server.getTag{java.lang.String,org.bukkit.NamespacedKey,java.lang.Class&lt;T&gt;}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="declaredException[102: &lt;T&gt; org.bukkit.Tag&lt;T&gt; org.bukkit.Server.getTag{java.lang.String,org.bukkit.NamespacedKey,java.lang.Class&lt;T&gt;}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isStatic[103: org.bukkit.loot.LootTable org.bukkit.Server.getLootTable{org.bukkit.NamespacedKey}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isDeprecated[103: org.bukkit.loot.LootTable org.bukkit.Server.getLootTable{org.bukkit.NamespacedKey}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="parameterTypes[103: org.bukkit.loot.LootTable org.bukkit.Server.getLootTable{org.bukkit.NamespacedKey}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="returnType[103: org.bukkit.loot.LootTable org.bukkit.Server.getLootTable{org.bukkit.NamespacedKey}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="declaredException[103: org.bukkit.loot.LootTable org.bukkit.Server.getLootTable{org.bukkit.NamespacedKey}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isStatic[104: void org.bukkit.Server.shutdown{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isDeprecated[104: void org.bukkit.Server.shutdown{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="parameterTypes[104: void org.bukkit.Server.shutdown{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="returnType[104: void org.bukkit.Server.shutdown{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="declaredException[104: void org.bukkit.Server.shutdown{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isStatic[105: java.lang.String org.bukkit.Server.getName{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isDeprecated[105: java.lang.String org.bukkit.Server.getName{}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="parameterTypes[105: java.lang.String org.bukkit.Server.getName{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="returnType[105: java.lang.String org.bukkit.Server.getName{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="declaredException[105: java.lang.String org.bukkit.Server.getName{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isStatic[106: org.bukkit.UnsafeValues org.bukkit.Server.getUnsafe{}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isDeprecated[106: org.bukkit.UnsafeValues org.bukkit.Server.getUnsafe{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="parameterTypes[106: org.bukkit.UnsafeValues org.bukkit.Server.getUnsafe{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="returnType[106: org.bukkit.UnsafeValues org.bukkit.Server.getUnsafe{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="declaredException[106: org.bukkit.UnsafeValues org.bukkit.Server.getUnsafe{}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isStatic[107: int org.bukkit.Server.getPort{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isDeprecated[107: int org.bukkit.Server.getPort{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="parameterTypes[107: int org.bukkit.Server.getPort{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="returnType[107: int org.bukkit.Server.getPort{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="declaredException[107: int org.bukkit.Server.getPort{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isStatic[108: org.bukkit.map.MapView org.bukkit.Server.getMap{short}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isDeprecated[108: org.bukkit.map.MapView org.bukkit.Server.getMap{short}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="parameterTypes[108: org.bukkit.map.MapView org.bukkit.Server.getMap{short}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="returnType[108: org.bukkit.map.MapView org.bukkit.Server.getMap{short}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="declaredException[108: org.bukkit.map.MapView org.bukkit.Server.getMap{short}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isStatic[109: org.bukkit.map.MapView org.bukkit.Server.createMap{org.bukkit.World}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isDeprecated[109: org.bukkit.map.MapView org.bukkit.Server.createMap{org.bukkit.World}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="parameterTypes[109: org.bukkit.map.MapView org.bukkit.Server.createMap{org.bukkit.World}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="returnType[109: org.bukkit.map.MapView org.bukkit.Server.createMap{org.bukkit.World}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="declaredException[109: org.bukkit.map.MapView org.bukkit.Server.createMap{org.bukkit.World}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isStatic[110: java.util.logging.Logger org.bukkit.Server.getLogger{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="isDeprecated[110: java.util.logging.Logger org.bukkit.Server.getLogger{}]" time="0.001"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="parameterTypes[110: java.util.logging.Logger org.bukkit.Server.getLogger{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="returnType[110: java.util.logging.Logger org.bukkit.Server.getLogger{}]" time="0"/>
  <testcase classname="org.bukkit.BukkitMirrorTest" name="declaredException[110: java.util.logging.Logger org.bukkit.Server.getLogger{}]" time="0"/>
</testsuite>