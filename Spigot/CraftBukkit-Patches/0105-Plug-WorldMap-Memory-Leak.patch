From 37b1e55d612b8eabacb4eb9b097a6c4357c0bb3a Mon Sep 17 00:00:00 2001
From: md_5 <git@md-5.net>
Date: Fri, 8 Aug 2014 19:57:03 +1000
Subject: [PATCH] Plug WorldMap Memory Leak


diff --git a/src/main/java/net/minecraft/server/PersistentCollection.java b/src/main/java/net/minecraft/server/PersistentCollection.java
index cfe8ec20c..9c5f9204b 100644
--- a/src/main/java/net/minecraft/server/PersistentCollection.java
+++ b/src/main/java/net/minecraft/server/PersistentCollection.java
@@ -11,7 +11,7 @@ import javax.annotation.Nullable;
 
 public class PersistentCollection {
 
-    private final Map<DimensionManager, WorldPersistentData> a;
+    public final Map<DimensionManager, WorldPersistentData> a; // Spigot
     @Nullable
     private final IDataManager b;
 
diff --git a/src/main/java/net/minecraft/server/World.java b/src/main/java/net/minecraft/server/World.java
index 50edf2f66..cec8ebe82 100644
--- a/src/main/java/net/minecraft/server/World.java
+++ b/src/main/java/net/minecraft/server/World.java
@@ -1007,6 +1007,26 @@ public abstract class World implements IEntityAccess, GeneratorAccess, IIBlockAc
         entity.die();
         if (entity instanceof EntityHuman) {
             this.players.remove(entity);
+            // Spigot start
+            for ( WorldPersistentData worldData : worldMaps.a.values() )
+            {
+                for (Object o : worldData.c.values() )
+                {
+                    if ( o instanceof WorldMap )
+                    {
+                        WorldMap map = (WorldMap) o;
+                        map.j.remove( entity );
+                        for ( Iterator<WorldMap.WorldMapHumanTracker> iter = (Iterator<WorldMap.WorldMapHumanTracker>) map.h.iterator(); iter.hasNext(); )
+                        {
+                            if ( iter.next().trackee == entity )
+                            {
+                                iter.remove();
+                            }
+                        }
+                    }
+                }
+            }
+            // Spigot end
             this.everyoneSleeping();
             this.c(entity);
         }
diff --git a/src/main/java/net/minecraft/server/WorldMap.java b/src/main/java/net/minecraft/server/WorldMap.java
index 86f79cc1c..bf7963b42 100644
--- a/src/main/java/net/minecraft/server/WorldMap.java
+++ b/src/main/java/net/minecraft/server/WorldMap.java
@@ -26,7 +26,7 @@ public class WorldMap extends PersistentBase {
     public byte scale;
     public byte[] colors = new byte[16384];
     public List<WorldMap.WorldMapHumanTracker> h = Lists.newArrayList();
-    private final Map<EntityHuman, WorldMap.WorldMapHumanTracker> j = Maps.newHashMap();
+    public final Map<EntityHuman, WorldMap.WorldMapHumanTracker> j = Maps.newHashMap(); // Spigot private -> public
     private final Map<String, MapIconBanner> k = Maps.newHashMap();
     public Map<String, MapIcon> decorations = Maps.newLinkedHashMap();
     private final Map<String, WorldMapFrame> l = Maps.newHashMap();
diff --git a/src/main/java/net/minecraft/server/WorldPersistentData.java b/src/main/java/net/minecraft/server/WorldPersistentData.java
index ab79227e3..b21f7073f 100644
--- a/src/main/java/net/minecraft/server/WorldPersistentData.java
+++ b/src/main/java/net/minecraft/server/WorldPersistentData.java
@@ -26,7 +26,7 @@ public class WorldPersistentData {
 
     private static final Logger a = LogManager.getLogger();
     private final DimensionManager b;
-    private Map<String, PersistentBase> c = Maps.newHashMap();
+    public Map<String, PersistentBase> c = Maps.newHashMap(); // Spigot
     private final Object2IntMap<String> d = new Object2IntOpenHashMap();
     @Nullable
     private final IDataManager e;
-- 
2.17.1

